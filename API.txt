上传地址 http://fileserver.lczybj.com/fileserver/upload/

下载地址 http://fileserver.lczybj.com/fileserver/get/文件id?token=xxx  如果是需要鉴权的资源则必须填写token参数

索引信息 http://fileserver.lczybj.com/fileserver/info/文件id

获取token http://fileserver.lczybj.com/fileserver/token/ 只接收post请求，参数 appid、appkey

删除地址 http://fileserver.lczybj.com/fileserver/del/ 只接收post请求，参数 id、appid、appkey ，如果是需要鉴权的资源则必须填写token参数并忽略appid、appkey
	不需要鉴权时，post 传递参数 id、appid、appkey 完成删除
	需要鉴权时，post 传递参数 id、token 完成删除


在程序中模拟以下表单，即可完成附件上传，参数名与含义参见表单内注释
<form action="http://fileserver.lczybj.com/fileserver/upload/" method="POST" enctype="multipart/form-data" >
        <!-- 应用名,由后台注册提供 -->
        <p>appid:<input type="text" name="appid" value="test"/></p>
        <!-- 应用名对应的开发者许可,由后台注册提供-->
        <p>appkey:<input type="text" name="appkey" value="test"/></p>
        <!-- 如果需要更新附件，则需指明id，新增时此参数为空即可 -->
        <p>id:<input type="text" name="id" value="" /></p>
        <!-- 附件类型，file / image 文件或 image，默认 image -->
        <p>file_type:<input type="text" name="file_type" value="image" /></p>
        <!-- # 是否加水印, 如果 file_type=image 则默认 true,可选值 true / false -->
        <p>watermark:<input type="text" name="watermark" value="true" /></p>
        <!-- # 下载和删除资源时是否需要鉴权，auth=true 鉴权，auth=false 不鉴权，默认 false -->
        <p>auth:<input type="text" name="auth" value="false" /></p>
        <!-- # 可以根据传递的url参数，抓去对应的资源，url和file同时传递时，优先处理 url -->
        <p>url:<input type="text" name="url" value="" /></p>
        <!-- 附件 -->
        <p>file:<input type="file" name="file" /></p>
        <button type="submit">submit</button>
</form>

上传成功时返回：{"success":true,"entity":{"id":"文件id"}}
上传失败时返回：{"success":false,"entity":{"reason":"..."}}

文件id需要业务系统自行保存，读取和删除文件时需要使用此id

下载成功时直接返回文件流到请求端(content_type='text/plain;charset=utf8'),其中文件大小在 Content-Length 属性中返回；
下载失败时返回：not_found 等字符串


--------------------------------------------------------------
2016-07-13 : append by liangc
--------------------------------------------------------------

下载图片时,在url末尾可以使用图片处理函数对目标图片进行加工

功能: 缩放图片
函数名: resize(l=None, w=None, h=None):
参数:
       l: 当传了最小边长时,将忽略 w 和 h 参数,然后按照原图的 size 找最短边参照 l 做等比缩放
       w: 要缩放的目标宽度
       h: 要缩放的目标高度

功能: 剪切图片
函数名: crop(l=None, x=None, y=None, w=None, h=None)
参数:
       l: 当传了最小边长时,将忽略 w 和 h 参数,然后按照原图的 size 找最短边参照 l 计算出宽高比例
       x: 以左上角为 O, x 轴 ; (x,y) 为剪切的起点
       y: 以左上角为 O, y 轴 ; (x,y) 为剪切的起点
       w: 长
       h: 高

功能: 根据图片容器大小修正原图
函数名: container(w=None, h=None):
参数:
       w: 图片容器的最大长度
       h: 图片容器的最大高度

例如:

    1. 等比缩放原图的最小边长为 300
        http://fileserver.lczybj.com/fileserver/get/文件id/resize(l=300)/

    2. 从左上角开始剪切出边长为300的正方形
        http://fileserver.lczybj.com/fileserver/get/文件id/crop(x=0,y=0,w=300,h=300)/

    3. 按照宽缩放图片并剪切一个正方形
        http://fileserver.lczybj.com/fileserver/get/文件id/resize(w=300)&crop(x=0,y=0,w=300,h=300)/

       当只传递 l 参数,而不传 (x,y) 时,系统将在图片中心剪切出边长为 l 的正方形
        http://fileserver.lczybj.com/fileserver/get/文件id/resize(w=300)&crop(l=300)/

    4. 将图片缩放并剪切,以符合 400x300 尺寸容器展示
        http://fileserver.lczybj.com/fileserver/get/文件id/container(w=400,h=300)/
